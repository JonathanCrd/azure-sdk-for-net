// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Security.KeyVault.Administration.Samples
{
    public partial class Samples_SettingsRestClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_UpdateSetting_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                value = "<value>",
            });
            Response response = client.UpdateSetting("<settingName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_UpdateSetting_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                value = "<value>",
            });
            Response response = await client.UpdateSettingAsync("<settingName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_UpdateSetting_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                value = "<value>",
            });
            Response response = client.UpdateSetting("<settingName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_UpdateSetting_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                value = "<value>",
            });
            Response response = await client.UpdateSettingAsync("<settingName>", content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSetting_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = client.GetSetting("<settingName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSetting_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = await client.GetSettingAsync("<settingName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSetting_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<KeyVaultSetting> response = client.GetSetting("<settingName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSetting_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<KeyVaultSetting> response = await client.GetSettingAsync("<settingName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSetting_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = client.GetSetting("<settingName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSetting_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = await client.GetSettingAsync("<settingName>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSetting_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<KeyVaultSetting> response = client.GetSetting("<settingName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSetting_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<KeyVaultSetting> response = await client.GetSettingAsync("<settingName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSettings_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = client.GetSettings(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSettings_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = await client.GetSettingsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSettings_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<GetSettingsResult> response = client.GetSettings();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSettings_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<GetSettingsResult> response = await client.GetSettingsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSettings_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = client.GetSettings(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("settings")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("settings")[0].GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("settings")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSettings_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response response = await client.GetSettingsAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("settings")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("settings")[0].GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("settings")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SettingsRestClient_GetSettings_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<GetSettingsResult> response = client.GetSettings();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SettingsRestClient_GetSettings_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            SettingsRestClient client = new SettingsRestClient(endpoint, credential);

            Response<GetSettingsResult> response = await client.GetSettingsAsync();
        }
    }
}
